; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30040.0 

	TITLE	F:\ASM tutorial\Code\ASM MASM tutorial\Debug\triangle.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__367E36B2_triangle@c DB 01H
msvcjmc	ENDS
PUBLIC	_main
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_07KMJJBCNA@?1bin?1sh@			; `string'
EXTRN	_execve:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_07KMJJBCNA@?1bin?1sh@
CONST	SEGMENT
??_C@_07KMJJBCNA@?1bin?1sh@ DB '/bin/sh', 00H		; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File F:\ASM tutorial\Code\ASM MASM tutorial\triangle.c
;	COMDAT _main
_TEXT	SEGMENT
_name$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT

; 2    : void main() {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-20]
	mov	ecx, 5
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __367E36B2_triangle@c
	call	@__CheckForDebuggerJustMyCode@4

; 3    : 	char* name[2];
; 4    : 	name[0] = "/bin/sh";

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR _name$[ebp+ecx], OFFSET ??_C@_07KMJJBCNA@?1bin?1sh@

; 5    : 	name[1] = NULL;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR _name$[ebp+eax], 0

; 6    : 	execve(name[0], name, NULL);

	push	0
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _name$[ebp+edx]
	push	eax
	call	_execve
	add	esp, 12					; 0000000cH

; 7    : }

	xor	eax, eax
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@main:
	DD	1
	DD	$LN4@main
$LN4@main:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN3@main
$LN3@main:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_main	ENDP
_TEXT	ENDS
END
