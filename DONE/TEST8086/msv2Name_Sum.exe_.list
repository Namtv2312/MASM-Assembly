EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
msv2Name_Sum.exe_ -- emu8086 assembler version: 4.08  
 
[ 11/07/2022  --  11:24:40 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       inchuoi macro chuoi
[   3]        :                                       mov ah,9
[   4]        :                                       lea dx,chuoi
[   5]        :                                       int 21h
[   6]        :                                       endm
[   7]        :                                       .stack 100h
[   8]        :                                       .data
[   9]    0100: 4E 68 61 70 20 6D 61 20 53 56 3A 20   msg1 db "Nhap ma SV: $"
                24                                  
[  10]    010D: 0A 0D 4E 61 6D 65 3A 20 54 72 61 6E   msg2 db 10,13,"Name: Tran Van Nam$"
                20 56 61 6E 20 4E 61 6D 24          
[  11]    0122: 0A 0D 54 68 6F 6E 67 20 74 69 6E 20   msg3 db 10,13,"Thong tin sai!!!Nhap lai$"
                73 61 69 21 21 21 4E 68 61 70 20 6C 
                61 69 24                            
[  12]    013D: 0A 0D 24                              xdong db 10,13,"$"
[  13]    0140: 61 74 31 36 30 36 33 32               msv1 db "at160632"
[  14]    0148: 41 54 31 36 30 36 33 32               msv2 db "AT160632"
[  15]    0150: 1E 00 24 24 24 24 24 24 24 24 24 24   str 30,?,30 dup("$")  ,"nam4lpha"
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 6E 61 6D 34 
                6C 70 68 61                         
[  16]    0178: 0A 0D 54 6F 6E 67 20 63 75 61 20 63   msg4 db 10,13,"Tong cua chuoi s = $"
                68 75 6F 69 20 73 20 3D 20 24       
[  17]    018E: 64 00 24 24 24 24 24 24 24 24 24 24   str1 db 100,?,100 dup("$")
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24 24 24 24 24 24 24 
                24 24 24 24 24 24                   
[  18]    01F4: 0A 02 04 05 FB                        chuoi_so db 10,2,4,5,-5 ;nhap san chuoi o day
[  19]    01F9: 00 00                                 sum dw 0
[  20]        :                                       .code
[  21]    0200:                                       main proc
[  22]    0200: B8 10 00                              mov ax,@data
[  23]    0203: 8E D8                                 mov ds,ax
[  24]    0205: 8E C0                                 mov es,ax
[  25]        :                                       ;nhap msv
[  26]    0207:                                       nhapmsv:
[  27]    0207: B4 09 BA 00 00 CD 21                  inchuoi msg1
[  28]        :                                       ;nhap chuoi
[  29]    020E: B4 0A                                 mov ah,0Ah
[  30]    0210: BA 50 00                              lea dx,str
[  31]    0213: CD 21                                 int 21h
[  32]    0215: 33 C9                                 xor cx,cx
[  33]        :                                       
[  34]    0217:                                       kiemtra:
[  35]    0217: B1 08                                 mov cl,8
[  36]    0219: 8A 1E 51 00                           mov bl, [str+1]
[  37]    021D: 3A CB                                 cmp cl, bl
[  38]    021F: 75 14                                 jnz nhaplai
[  39]    0221: BE 52 00                              lea si,str+2
[  40]    0224: BF 40 00                              lea di,msv1
[  41]    0227: F3 A6                                 repe cmpsb
[  42]    0229: 74 1A                                 je intb1
[  43]    022B: BE 52 00                              lea si,str+2
[  44]    022E: BF 48 00                              lea di,msv2
[  45]    0231: F3 A6                                 repe cmpsb
[  46]    0233: 74 10                                 je intb1
[  47]    0235:                                       nhaplai:
[  48]    0235: B4 09 BA 22 00 CD 21                  inchuoi msg3
[  49]    023C: B4 09 BA 3D 00 CD 21                  inchuoi xdong
[  50]    0243: EB C2                                 jmp nhapmsv
[  51]    0245:                                       intb1:
[  52]    0245: B4 09 BA 0D 00 CD 21                  inchuoi msg2
[  53]        :                                       
[  54]        :                                       
[  55]        :                                       
[  56]        :                                       ;tinh tong chuoi so
[  57]    024C: BE F4 00                              lea si,chuoi_so ;si tro den ngan nho dau tien cua mang
[  58]    024F: 33 C9                                 xor cx,cx
[  59]    0251: B1 05                                 mov cl,5   ;so phan tu trong day so
[  60]    0253: B4 09 BA 78 00 CD 21                  inchuoi msg4
[  61]    025A:                                       tinh_tong:
[  62]    025A: 33 DB                                 xor bx,bx
[  63]    025C: 8A 1C                                 mov bl,[si]
[  64]    025E: 46                                    inc si
[  65]    025F: 03 1E F9 00                           add bx,sum
[  66]    0263: 89 1E F9 00                           mov sum,bx
[  67]    0267: E2 F1                                 loop tinh_tong
[  68]    0269: 33 C9                                 xor cx,cx
[  69]    026B: A1 F9 00                              mov ax,sum
[  70]    026E: BB 0A 00                              mov bx,10
[  71]    0271:                                       lap_push:
[  72]    0271: 33 D2                                 xor dx,dx
[  73]    0273: F7 F3                                 div bx
[  74]    0275: 52                                    push dx
[  75]    0276: 41                                    inc cx
[  76]    0277: 3D 00 00                              cmp ax,0
[  77]    027A: 74 02                                 je hienthi
[  78]    027C: EB F3                                 jmp lap_push
[  79]    027E:                                       hienthi:
[  80]    027E: 5A                                    pop dx
[  81]    027F: 83 C2 30                              add dx,30h
[  82]    0282: B4 02                                 mov ah,2
[  83]    0284: CD 21                                 int 21h
[  84]    0286: E2 F6                                 loop hienthi
[  85]    0288:                                       thoat:
[  86]    0288: B4 4C                                 mov ah,4ch
[  87]    028A: CD 21                                 int 21h
[  88]        :                                       main endp
[  89]        :                                       end main
[  90]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 8C      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 03      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: E9      -   check sum (l.byte)
0013: 6F      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 20      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 20      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
