EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
noname.exe_ -- emu8086 assembler version: 4.08  
 
[ 11/07/2022  --  14:48:24 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       inchuoi macro chuoi
[   3]        :                                       mov ah,9
[   4]        :                                       lea dx,chuoi
[   5]        :                                       int 21h
[   6]        :                                       endm
[   7]        :                                       .stack 100h
[   8]        :                                       .data
[   9]        :                                       
[  10]    0100: 74 65 70 74 69 6E 2E 74 78 74 00      filename db "teptin.txt",0
[  11]    010B: 0A 0D 74 68 61 6E 68 20 63 6F 6E 67   output3 db 10,13,"thanh cong$"
                24                                  
[  12]    0118: 54 72 61 6E 20 56 61 6E 20 4E 61 6D   str1 db "Tran Van Nam- AT160632$"
                2D 20 41 54 31 36 30 36 33 32 24    
[  13]    012F: 00 00                                 pf dw ?
[  14]        :                                       .code
[  15]    0140:                                       main proc
[  16]    0140: B8 10 00                              mov ax,@data
[  17]    0143: 8E D8                                 mov ds,ax
[  18]        :                                       
[  19]    0145:                                       taofile:
[  20]    0145: B4 3C                                 mov ah,3ch
[  21]    0147: BA 00 00                              lea dx,filename
[  22]    014A: B9 00 00                              mov cx,0 ;thuoc tinh cua file
[  23]    014D: CD 21                                 int 21h  ;ax = file handle (tep xu li)
[  24]    014F:                                       nhap_ndfile:
[  25]    014F: A3 2F 00                              mov pf,ax ;cat file, gan con tro file cho buffer
[  26]    0152: B4 40                                 mov ah,40h
[  27]    0154: 8B 1E 2F 00                           mov bx,pf ;truyen file handle vao trong bx, gan con tro
[  28]    0158: 33 C9                                 xor cx,cx
[  29]    015A: 8A 0E 19 00                           mov cl,[str1+1]  ;so byte de viet
[  30]    015E: BA 18 00                              lea dx,str1   ;du lieu de viet vao file
[  31]    0161: CD 21                                 int 21h
[  32]    0163: B4 3E                                 mov ah,3eh
[  33]    0165: 8B 1E 2F 00                           mov bx,pf
[  34]    0169: CD 21                                 int 21h
[  35]    016B: B4 09 BA 0B 00 CD 21                  inchuoi output3
[  36]        :                                       
[  37]    0172:                                       thoat:
[  38]    0172: B4 4C                                 mov ah,4ch
[  39]    0174: CD 21                                 int 21h
[  40]        :                                       main endp
[  41]        :                                       end main
[  42]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 76      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 56      -   check sum (l.byte)
0013: C0      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 14      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 14      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
