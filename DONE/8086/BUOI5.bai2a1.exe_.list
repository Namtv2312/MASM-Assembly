EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
BUOI5.bai2a1.exe_ -- emu8086 assembler version: 4.08  
 
[ 06/06/2022  --  19:08:39 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       inchuoi MACRO chuoi
[   2]        :                                       MOV AH, 9h
[   3]        :                                       LEA DX, chuoi
[   4]        :                                       INT 21h
[   5]        :                                       ENDM
[   6]        :                                       DSEG SEGMENT
[   7]    0000: 48 61 79 20 6E 68 61 70 20 73 6F 20   msg1 DB "Hay nhap so nhi phan 16 bit: $"
                6E 68 69 20 70 68 61 6E 20 31 36 20 
                62 69 74 3A 20 24                   
[   8]    001E: 53 6F 20 6E 68 69 20 70 68 61 6E 20   msg2 DB "So nhi phan da nhap la: $"
                64 61 20 6E 68 61 70 20 6C 61 3A 20 
                24                                  
[   9]    0037: 0A 0D 24                              xdong DB 10, 13, ‘$’
[  10]    003A: 00 00                                 sobin Dw ? ; luu tr? s? nh? phân nh?n du?c
[  11]        :                                       DSEG ENDS
[  12]        :                                       CSEG SEGMENT
[  13]        :                                       ASSUME CS:CSEG, DS:DSEG
[  14]    0040: B8 00 00                              begin: MOV AX, DSEG
[  15]    0043: 8E D8                                 MOV DS, AX
[  16]    0045: B4 09 BA 00 00 CD 21                  inchuoi msg1
[  17]    004C: E8 21 00                              CALL bin_in
[  18]    004F: 89 1E 3A 00                           MOV sobin, Bx
[  19]    0053: B4 09 BA 37 00 CD 21                  inchuoi xdong
[  20]    005A: B4 09 BA 1E 00 CD 21                  inchuoi msg2
[  21]    0061: 8B 1E 3A 00                           MOV Bx, sobin
[  22]    0065: E8 22 00                              CALL bin_out
[  23]    0068: B4 01                                 MOV AH, 01
[  24]    006A: CD 21                                 INT 21h
[  25]    006C: B4 4C                                 MOV AH, 4Ch ; thoat kh?i chuong trình
[  26]    006E: CD 21                                 INT 21h
[  27]        :                                       
[  28]    0070:                                       bin_in PROC
[  29]    0070: BB 00 00                              MOV Bx, 0 ; Xóa BL
[  30]    0073: B9 10 00                              MOV CX, 16 ; nh?p d? 8 bit thì d?ng
[  31]    0076: B4 01                                 nhap:MOV AH, 01h ; Hàm nh?p ký t?
[  32]    0078: CD 21                                 INT 21h
[  33]    007A: B4 00                                 mov ah, 0
[  34]    007C: 3C 0D                                 CMP AL, 0Dh ; n?u là phím Enter thì thôi nh?p
[  35]    007E: 74 09                                 JZ exit ; không ph?i Enter thì d?i sang bit
[  36]    0080: D1 E3                                 SHL bx, 1 ; D?ch trái BL 1 bit
[  37]    0082: 2D 30 00                              SUB Ax, 30h ; Ký s? - 30h = s?
[  38]    0085: 03 D8                                 ADD Bx, Ax ; Chuy?n bit t? AL sang BL luu tr?
[  39]    0087: E2 ED                                 LOOP nhap
[  40]    0089: C3                                    exit:RET
[  41]        :                                       bin_in ENDP
[  42]        :                                       
[  43]    008A:                                       bin_out PROC
[  44]    008A: B9 10 00                              MOV CX, 16 ; Xu?t 8 bit trong BL ra M.Hình
[  45]    008D: BA 00 00                              xuat:MOV Dx, 0
[  46]    0090: D1 E3                                 SHL Bx, 1 ; CF ch?a MSB, xu?t ra màn hình
[  47]    0092: D1 D2                                 RCL Dx, 1 ; dua CF vào LSB c?a DL
[  48]    0094: 83 C2 30                              ADD Dx, 30h ; S? + 30h = Ký s?
[  49]    0097: B4 02                                 MOV AH, 02h ; In ra màn hình
[  50]    0099: CD 21                                 INT 21h
[  51]    009B: E2 F0                                 LOOP xuat
[  52]    009D: C3                                    RET
[  53]        :                                       bin_out ENDP
[  54]        :                                       CSEG ENDS
[  55]        :                                       END begin
[  56]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 9E      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: D5      -   check sum (l.byte)
0013: 1C      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 04      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 04      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
