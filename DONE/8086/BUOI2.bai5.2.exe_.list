EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
BUOI2.bai5.2.exe_ -- emu8086 assembler version: 4.08  
 
[ 24/05/2022  --  20:19:30 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model    small
[   2]        :                                       .stack
[   3]        :                                       .data
[   4]    0100: 48 61 79 20 6E 68 61 70 20 6D 6F 74   TBao1    db    "Hay nhap mot ky tu: $"
                20 6B 79 20 74 75 3A 20 24          
[   5]    0115: 0D 0A 4B 79 20 74 75 20 64 61 20 6E   TBao2    db    0DH,0AH,"Ky tu da nhap: $"
                68 61 70 3A 20 24                   
[   6]        :                                       
[   7]    0127: 00                                    KyTu    db    ?
[   8]        :                                       .code
[   9]        :                                       
[  10]    0130: B8 10 00                              Mov ax,@data
[  11]    0133: 8E D8                                 Mov ds,ax
[  12]        :                                       
[  13]    0135: BA 00 00                              Lea dx, TBao1
[  14]    0138: B4 09                                 Mov ah, 9
[  15]    013A: CD 21                                 int 21h
[  16]        :                                       
[  17]    013C: B4 01                                 Mov ah, 1
[  18]    013E: CD 21                                 Int 21h
[  19]    0140: A2 27 00                              Mov KyTu, al
[  20]        :                                       
[  21]    0143: BA 15 00                              lea dx, TBao2
[  22]    0146: B4 09                                 mov ah, 9
[  23]    0148: CD 21                                 int 21h
[  24]        :                                       
[  25]    014A: B4 02                                 Mov ah, 2
[  26]    014C: 8A 16 27 00                           Mov dl, KyTu
[  27]    0150: CD 21                                 Int 21h
[  28]        :                                       
[  29]    0152: B4 4C                                 mov ah, 4Ch
[  30]    0154: CD 21                                 int 21h
[  31]        :                                       end
[  32]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 56      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 48      -   check sum (l.byte)
0013: 50      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 13      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 13      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
